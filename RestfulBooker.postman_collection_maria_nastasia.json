{
	"info": {
		"_postman_id": "ad61e4b8-6cac-4909-93bd-1a279d426706",
		"name": "RestfulBooker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26795930"
	},
	"item": [
		{
			"name": "Ping",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{env}}ping",
					"host": [
						"{{env}}ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches token\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"token\");\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{env}}auth",
					"host": [
						"{{env}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateTokenWrongUsername",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"wrongUsername\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{env}}/auth",
					"host": [
						"{{env}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODOCreateTokenWrongUsernamePassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Body matches Bad credentials\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Bad credentials\");\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"wrongUsername\",\r\n    \"password\" : \"hiugbuhfgtyfg\"\r\n}"
				},
				"url": {
					"raw": "{{env}}auth",
					"host": [
						"{{env}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODOCreateTokenBlankUsernamePassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{env}}auth",
					"host": [
						"{{env}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODOCreateTokenBlankUsernamePassword Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{env}}auth",
					"host": [
						"{{env}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODOCreateTokenWrongPassword",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"wrongUsername\",\r\n    \"password\" : 123456\r\n}"
				},
				"url": {
					"raw": "{{env}}auth",
					"host": [
						"{{env}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"});\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{env}}booking",
					"host": [
						"{{env}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"});\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"});\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"});\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"});\r",
							"pm.test(\"Body matches bookingdates\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingdates\");\r",
							"});\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"});\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{env}}booking/1",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookingWrongId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{env}}booking/wrongId",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"wrongId"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches bookingid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});\r",
							"pm.test(\"Body matches booking\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"booking\");\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"});\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"});\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"});\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"});\r",
							"pm.test(\"Body matches bookingdates\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingdates\");\r",
							"});\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"});\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"});\r",
							"pm.test(\"Body matches additionalneeds\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking",
					"host": [
						"{{env}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO CreateBookingWithoutCheckinOrCheckOut",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"pm.test(\"Body matches bookingdates\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"bookingdates\");\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"pm.test(\"Body matches additionalneeds\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"additionalneeds\");\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking",
					"host": [
						"{{env}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBookingNegativePrice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking",
					"host": [
						"{{env}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBookingWithoutFirstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking",
					"host": [
						"{{env}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "token=58962f5e5d301fd",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/1",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO UpdateBookingWithoutFirstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"    pm.test(\"Body matches additionalneeds\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(\"additionalneeds\");\r",
							"    });\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "token=58962f5e5d301fd",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/1",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO UpdateBookingWithNegativePrice",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Body matches firstname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");\r",
							"pm.test(\"Body matches lastname\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"lastname\");\r",
							"pm.test(\"Body matches totalprice\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"totalprice\");\r",
							"pm.test(\"Body matches depositpaid\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"depositpaid\");\r",
							"pm.test(\"Body matches checkin\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkin\");\r",
							"pm.test(\"Body matches checkout\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"checkout\");\r",
							"pm.test(\"Body matches additionalneeds\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"additionalneeds\");\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "token=58962f5e5d301fd",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : -111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/1",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBookingWrongId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "token=58962f5e5d301fd",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM=",
						"type": "default",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/wrongId",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"wrongId"
					]
				}
			},
			"response": []
		},
		{
			"name": "PartialUpdate",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/1",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO PartialUpdateWithWrongId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "Cookie",
						"value": "token=abc123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\"\r\n}"
				},
				"url": {
					"raw": "{{env}}booking/wrongid",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"wrongid"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Body matches Created\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{env}}booking/7157",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"7157"
					]
				}
			},
			"response": []
		},
		{
			"name": "TODO DeleteWrongId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{env}}booking/wrongId",
					"host": [
						"{{env}}booking"
					],
					"path": [
						"wrongId"
					]
				}
			},
			"response": []
		}
	]
}